// <auto-generated />
using System;
using Assignment_3_backend_api.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Assignment_3_backend_api.Migrations
{
    [DbContext(typeof(MovieDbEfContext))]
    [Migration("20220926131054_initial")]
    partial class initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Assignment_3_backend_api.Models.Character", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Alias")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Picture")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Characters");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Alias = "Cool",
                            FullName = "Hame Ha",
                            Picture = "img"
                        },
                        new
                        {
                            Id = 2,
                            Alias = "Nice",
                            FullName = "James Aloy",
                            Picture = "img"
                        },
                        new
                        {
                            Id = 3,
                            Alias = "Cold",
                            FullName = "Plat Yo",
                            Picture = "img"
                        },
                        new
                        {
                            Id = 4,
                            Alias = "Angry",
                            FullName = "Sri Pol",
                            Picture = "img"
                        },
                        new
                        {
                            Id = 5,
                            Alias = "Smart",
                            FullName = "Wer Hi",
                            Picture = "img"
                        });
                });

            modelBuilder.Entity("Assignment_3_backend_api.Models.Franchise", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Franchises");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Cool franchise",
                            Name = "The god of franchise"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Queen of franchise",
                            Name = "The goddess of franchise"
                        });
                });

            modelBuilder.Entity("Assignment_3_backend_api.Models.Movie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Director")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("FranchiseId")
                        .HasColumnType("int");

                    b.Property<string>("Genre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MovieTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Picture")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ReleaseYear")
                        .HasColumnType("int");

                    b.Property<string>("Trailer")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("FranchiseId");

                    b.ToTable("Movies");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Director = "Momo",
                            FranchiseId = 1,
                            Genre = "Action, Drama",
                            MovieTitle = "The king returns",
                            Picture = "img",
                            ReleaseYear = 2303,
                            Trailer = "trail"
                        },
                        new
                        {
                            Id = 2,
                            Director = "Momo",
                            FranchiseId = 1,
                            Genre = "Action, Drama, Romance",
                            MovieTitle = "The queen returns",
                            Picture = "img",
                            ReleaseYear = 2343,
                            Trailer = "trail"
                        },
                        new
                        {
                            Id = 3,
                            Director = "Albert",
                            FranchiseId = 2,
                            Genre = "Action, Drama, Horror",
                            MovieTitle = "The dragon",
                            Picture = "img",
                            ReleaseYear = 2503,
                            Trailer = "trail"
                        });
                });

            modelBuilder.Entity("CharacterMovie", b =>
                {
                    b.Property<int>("CharactersId")
                        .HasColumnType("int");

                    b.Property<int>("MoviesId")
                        .HasColumnType("int");

                    b.HasKey("CharactersId", "MoviesId");

                    b.HasIndex("MoviesId");

                    b.ToTable("CharacterMovie");

                    b.HasData(
                        new
                        {
                            CharactersId = 1,
                            MoviesId = 1
                        },
                        new
                        {
                            CharactersId = 2,
                            MoviesId = 1
                        },
                        new
                        {
                            CharactersId = 3,
                            MoviesId = 1
                        },
                        new
                        {
                            CharactersId = 1,
                            MoviesId = 2
                        },
                        new
                        {
                            CharactersId = 2,
                            MoviesId = 2
                        },
                        new
                        {
                            CharactersId = 3,
                            MoviesId = 2
                        },
                        new
                        {
                            CharactersId = 4,
                            MoviesId = 2
                        },
                        new
                        {
                            CharactersId = 2,
                            MoviesId = 3
                        },
                        new
                        {
                            CharactersId = 3,
                            MoviesId = 3
                        },
                        new
                        {
                            CharactersId = 4,
                            MoviesId = 3
                        },
                        new
                        {
                            CharactersId = 5,
                            MoviesId = 3
                        });
                });

            modelBuilder.Entity("Assignment_3_backend_api.Models.Movie", b =>
                {
                    b.HasOne("Assignment_3_backend_api.Models.Franchise", "Franchise")
                        .WithMany("Movies")
                        .HasForeignKey("FranchiseId");

                    b.Navigation("Franchise");
                });

            modelBuilder.Entity("CharacterMovie", b =>
                {
                    b.HasOne("Assignment_3_backend_api.Models.Character", null)
                        .WithMany()
                        .HasForeignKey("CharactersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Assignment_3_backend_api.Models.Movie", null)
                        .WithMany()
                        .HasForeignKey("MoviesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Assignment_3_backend_api.Models.Franchise", b =>
                {
                    b.Navigation("Movies");
                });
#pragma warning restore 612, 618
        }
    }
}
